// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CancelFilledOrder extends ethereum.Event {
  get params(): CancelFilledOrder__Params {
    return new CancelFilledOrder__Params(this);
  }
}

export class CancelFilledOrder__Params {
  _event: CancelFilledOrder;

  constructor(event: CancelFilledOrder) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get seller(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get buyer(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get item(): string {
    return this._event.parameters[3].value.toString();
  }

  get qtty_bought(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class CancelOpenOrder extends ethereum.Event {
  get params(): CancelOpenOrder__Params {
    return new CancelOpenOrder__Params(this);
  }
}

export class CancelOpenOrder__Params {
  _event: CancelOpenOrder;

  constructor(event: CancelOpenOrder) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get seller(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get item(): string {
    return this._event.parameters[2].value.toString();
  }

  get qtty_to_sell(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class OrderCreated extends ethereum.Event {
  get params(): OrderCreated__Params {
    return new OrderCreated__Params(this);
  }
}

export class OrderCreated__Params {
  _event: OrderCreated;

  constructor(event: OrderCreated) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get seller(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get item(): string {
    return this._event.parameters[2].value.toString();
  }

  get qtty_to_sell(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class OrderDelivered extends ethereum.Event {
  get params(): OrderDelivered__Params {
    return new OrderDelivered__Params(this);
  }
}

export class OrderDelivered__Params {
  _event: OrderDelivered;

  constructor(event: OrderDelivered) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get seller(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get buyer(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get item(): string {
    return this._event.parameters[3].value.toString();
  }

  get qtty_bought(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class OrderFilled extends ethereum.Event {
  get params(): OrderFilled__Params {
    return new OrderFilled__Params(this);
  }
}

export class OrderFilled__Params {
  _event: OrderFilled;

  constructor(event: OrderFilled) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get seller(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get buyer(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get item(): string {
    return this._event.parameters[3].value.toString();
  }

  get qtty_bought(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class Withdraw extends ethereum.Event {
  get params(): Withdraw__Params {
    return new Withdraw__Params(this);
  }
}

export class Withdraw__Params {
  _event: Withdraw;

  constructor(event: Withdraw) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Marketplace__open_orderResult {
  value0: Array<BigInt>;
  value1: Array<string>;
  value2: Array<BigInt>;
  value3: Array<BigInt>;

  constructor(
    value0: Array<BigInt>,
    value1: Array<string>,
    value2: Array<BigInt>,
    value3: Array<BigInt>
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigIntArray(this.value0));
    map.set("value1", ethereum.Value.fromStringArray(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigIntArray(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigIntArray(this.value3));
    return map;
  }

  getIdOrder(): Array<BigInt> {
    return this.value0;
  }

  get_item(): Array<string> {
    return this.value1;
  }

  get_qty(): Array<BigInt> {
    return this.value2;
  }

  get_prc(): Array<BigInt> {
    return this.value3;
  }
}

export class Marketplace__ordersResult {
  value0: Address;
  value1: string;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;

  constructor(
    value0: Address,
    value1: string,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    return map;
  }

  getSeller(): Address {
    return this.value0;
  }

  getItem(): string {
    return this.value1;
  }

  getQtty_to_sell(): BigInt {
    return this.value2;
  }

  getPrice(): BigInt {
    return this.value3;
  }

  getTimestamp(): BigInt {
    return this.value4;
  }
}

export class Marketplace extends ethereum.SmartContract {
  static bind(address: Address): Marketplace {
    return new Marketplace("Marketplace", address);
  }

  Buyers(param0: BigInt): Address {
    let result = super.call("Buyers", "Buyers(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_Buyers(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("Buyers", "Buyers(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  allowedItems(param0: string): boolean {
    let result = super.call("allowedItems", "allowedItems(string):(bool)", [
      ethereum.Value.fromString(param0)
    ]);

    return result[0].toBoolean();
  }

  try_allowedItems(param0: string): ethereum.CallResult<boolean> {
    let result = super.tryCall("allowedItems", "allowedItems(string):(bool)", [
      ethereum.Value.fromString(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  balance(param0: Address): BigInt {
    let result = super.call("balance", "balance(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_balance(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balance", "balance(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  checkItemIsAllowed(_item: string): boolean {
    let result = super.call(
      "checkItemIsAllowed",
      "checkItemIsAllowed(string):(bool)",
      [ethereum.Value.fromString(_item)]
    );

    return result[0].toBoolean();
  }

  try_checkItemIsAllowed(_item: string): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "checkItemIsAllowed",
      "checkItemIsAllowed(string):(bool)",
      [ethereum.Value.fromString(_item)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  filledAmount(param0: BigInt): BigInt {
    let result = super.call("filledAmount", "filledAmount(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBigInt();
  }

  try_filledAmount(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "filledAmount",
      "filledAmount(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  filledQuantity(param0: BigInt): BigInt {
    let result = super.call(
      "filledQuantity",
      "filledQuantity(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBigInt();
  }

  try_filledQuantity(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "filledQuantity",
      "filledQuantity(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  goods(param0: Address, param1: string): BigInt {
    let result = super.call("goods", "goods(address,string):(uint256)", [
      ethereum.Value.fromAddress(param0),
      ethereum.Value.fromString(param1)
    ]);

    return result[0].toBigInt();
  }

  try_goods(param0: Address, param1: string): ethereum.CallResult<BigInt> {
    let result = super.tryCall("goods", "goods(address,string):(uint256)", [
      ethereum.Value.fromAddress(param0),
      ethereum.Value.fromString(param1)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  item(): string {
    let result = super.call("item", "item():(string)", []);

    return result[0].toString();
  }

  try_item(): ethereum.CallResult<string> {
    let result = super.tryCall("item", "item():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  myBalance(): BigInt {
    let result = super.call("myBalance", "myBalance():(uint256)", []);

    return result[0].toBigInt();
  }

  try_myBalance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("myBalance", "myBalance():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  open_order(): Marketplace__open_orderResult {
    let result = super.call(
      "open_order",
      "open_order():(uint256[],string[],uint256[],uint256[])",
      []
    );

    return new Marketplace__open_orderResult(
      result[0].toBigIntArray(),
      result[1].toStringArray(),
      result[2].toBigIntArray(),
      result[3].toBigIntArray()
    );
  }

  try_open_order(): ethereum.CallResult<Marketplace__open_orderResult> {
    let result = super.tryCall(
      "open_order",
      "open_order():(uint256[],string[],uint256[],uint256[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Marketplace__open_orderResult(
        value[0].toBigIntArray(),
        value[1].toStringArray(),
        value[2].toBigIntArray(),
        value[3].toBigIntArray()
      )
    );
  }

  orderCount(): BigInt {
    let result = super.call("orderCount", "orderCount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_orderCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("orderCount", "orderCount():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  orderCreated(param0: BigInt): boolean {
    let result = super.call("orderCreated", "orderCreated(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBoolean();
  }

  try_orderCreated(param0: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("orderCreated", "orderCreated(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  orderDelivered(param0: BigInt): boolean {
    let result = super.call(
      "orderDelivered",
      "orderDelivered(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBoolean();
  }

  try_orderDelivered(param0: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "orderDelivered",
      "orderDelivered(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  orderFilled(param0: BigInt): boolean {
    let result = super.call("orderFilled", "orderFilled(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBoolean();
  }

  try_orderFilled(param0: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("orderFilled", "orderFilled(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  orderStatus(param0: BigInt): i32 {
    let result = super.call("orderStatus", "orderStatus(uint256):(uint8)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toI32();
  }

  try_orderStatus(param0: BigInt): ethereum.CallResult<i32> {
    let result = super.tryCall("orderStatus", "orderStatus(uint256):(uint8)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  orders(param0: BigInt): Marketplace__ordersResult {
    let result = super.call(
      "orders",
      "orders(uint256):(address,string,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new Marketplace__ordersResult(
      result[0].toAddress(),
      result[1].toString(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt()
    );
  }

  try_orders(param0: BigInt): ethereum.CallResult<Marketplace__ordersResult> {
    let result = super.tryCall(
      "orders",
      "orders(uint256):(address,string,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Marketplace__ordersResult(
        value[0].toAddress(),
        value[1].toString(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt()
      )
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _feeAccount(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _feePercent(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class OrderReceivedCall extends ethereum.Call {
  get inputs(): OrderReceivedCall__Inputs {
    return new OrderReceivedCall__Inputs(this);
  }

  get outputs(): OrderReceivedCall__Outputs {
    return new OrderReceivedCall__Outputs(this);
  }
}

export class OrderReceivedCall__Inputs {
  _call: OrderReceivedCall;

  constructor(call: OrderReceivedCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class OrderReceivedCall__Outputs {
  _call: OrderReceivedCall;

  constructor(call: OrderReceivedCall) {
    this._call = call;
  }
}

export class AddAllowedItemsCall extends ethereum.Call {
  get inputs(): AddAllowedItemsCall__Inputs {
    return new AddAllowedItemsCall__Inputs(this);
  }

  get outputs(): AddAllowedItemsCall__Outputs {
    return new AddAllowedItemsCall__Outputs(this);
  }
}

export class AddAllowedItemsCall__Inputs {
  _call: AddAllowedItemsCall;

  constructor(call: AddAllowedItemsCall) {
    this._call = call;
  }

  get _item(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class AddAllowedItemsCall__Outputs {
  _call: AddAllowedItemsCall;

  constructor(call: AddAllowedItemsCall) {
    this._call = call;
  }
}

export class CancelFilledOrderCall extends ethereum.Call {
  get inputs(): CancelFilledOrderCall__Inputs {
    return new CancelFilledOrderCall__Inputs(this);
  }

  get outputs(): CancelFilledOrderCall__Outputs {
    return new CancelFilledOrderCall__Outputs(this);
  }
}

export class CancelFilledOrderCall__Inputs {
  _call: CancelFilledOrderCall;

  constructor(call: CancelFilledOrderCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelFilledOrderCall__Outputs {
  _call: CancelFilledOrderCall;

  constructor(call: CancelFilledOrderCall) {
    this._call = call;
  }
}

export class CancelOpenOrderCall extends ethereum.Call {
  get inputs(): CancelOpenOrderCall__Inputs {
    return new CancelOpenOrderCall__Inputs(this);
  }

  get outputs(): CancelOpenOrderCall__Outputs {
    return new CancelOpenOrderCall__Outputs(this);
  }
}

export class CancelOpenOrderCall__Inputs {
  _call: CancelOpenOrderCall;

  constructor(call: CancelOpenOrderCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelOpenOrderCall__Outputs {
  _call: CancelOpenOrderCall;

  constructor(call: CancelOpenOrderCall) {
    this._call = call;
  }
}

export class CreateListingCall extends ethereum.Call {
  get inputs(): CreateListingCall__Inputs {
    return new CreateListingCall__Inputs(this);
  }

  get outputs(): CreateListingCall__Outputs {
    return new CreateListingCall__Outputs(this);
  }
}

export class CreateListingCall__Inputs {
  _call: CreateListingCall;

  constructor(call: CreateListingCall) {
    this._call = call;
  }

  get _item(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _quantity(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _price(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class CreateListingCall__Outputs {
  _call: CreateListingCall;

  constructor(call: CreateListingCall) {
    this._call = call;
  }
}

export class FillOrderCall extends ethereum.Call {
  get inputs(): FillOrderCall__Inputs {
    return new FillOrderCall__Inputs(this);
  }

  get outputs(): FillOrderCall__Outputs {
    return new FillOrderCall__Outputs(this);
  }
}

export class FillOrderCall__Inputs {
  _call: FillOrderCall;

  constructor(call: FillOrderCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _quantity(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class FillOrderCall__Outputs {
  _call: FillOrderCall;

  constructor(call: FillOrderCall) {
    this._call = call;
  }
}

export class SetFeeAccountCall extends ethereum.Call {
  get inputs(): SetFeeAccountCall__Inputs {
    return new SetFeeAccountCall__Inputs(this);
  }

  get outputs(): SetFeeAccountCall__Outputs {
    return new SetFeeAccountCall__Outputs(this);
  }
}

export class SetFeeAccountCall__Inputs {
  _call: SetFeeAccountCall;

  constructor(call: SetFeeAccountCall) {
    this._call = call;
  }

  get _feeAccount(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFeeAccountCall__Outputs {
  _call: SetFeeAccountCall;

  constructor(call: SetFeeAccountCall) {
    this._call = call;
  }
}

export class SetMarketFeeCall extends ethereum.Call {
  get inputs(): SetMarketFeeCall__Inputs {
    return new SetMarketFeeCall__Inputs(this);
  }

  get outputs(): SetMarketFeeCall__Outputs {
    return new SetMarketFeeCall__Outputs(this);
  }
}

export class SetMarketFeeCall__Inputs {
  _call: SetMarketFeeCall;

  constructor(call: SetMarketFeeCall) {
    this._call = call;
  }

  get _feePercent(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMarketFeeCall__Outputs {
  _call: SetMarketFeeCall;

  constructor(call: SetMarketFeeCall) {
    this._call = call;
  }
}

export class WithdrawEtherCall extends ethereum.Call {
  get inputs(): WithdrawEtherCall__Inputs {
    return new WithdrawEtherCall__Inputs(this);
  }

  get outputs(): WithdrawEtherCall__Outputs {
    return new WithdrawEtherCall__Outputs(this);
  }
}

export class WithdrawEtherCall__Inputs {
  _call: WithdrawEtherCall;

  constructor(call: WithdrawEtherCall) {
    this._call = call;
  }
}

export class WithdrawEtherCall__Outputs {
  _call: WithdrawEtherCall;

  constructor(call: WithdrawEtherCall) {
    this._call = call;
  }
}
