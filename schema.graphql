type CancelFilledOrder @entity(immutable: true) {
  id: Bytes!
  id: BigInt! # uint256
  seller: Bytes! # address
  buyer: Bytes! # address
  item: String! # string
  qtty_bought: BigInt! # uint256
  price: BigInt! # uint256
  timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CancelOpenOrder @entity(immutable: true) {
  id: Bytes!
  id: BigInt! # uint256
  seller: Bytes! # address
  item: String! # string
  qtty_to_sell: BigInt! # uint256
  price: BigInt! # uint256
  timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OrderCreated @entity(immutable: true) {
  id: Bytes!
  id: BigInt! # uint256
  seller: Bytes! # address
  item: String! # string
  qtty_to_sell: BigInt! # uint256
  price: BigInt! # uint256
  timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OrderDelivered @entity(immutable: true) {
  id: Bytes!
  id: BigInt! # uint256
  seller: Bytes! # address
  buyer: Bytes! # address
  item: String! # string
  qtty_bought: BigInt! # uint256
  price: BigInt! # uint256
  timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OrderFilled @entity(immutable: true) {
  id: Bytes!
  id: BigInt! # uint256
  seller: Bytes! # address
  buyer: Bytes! # address
  item: String! # string
  qtty_bought: BigInt! # uint256
  price: BigInt! # uint256
  timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Withdraw @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
